/** @type {import('eslint').Linter.Config} */

export default {
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint/eslint-plugin', 'solid'],
  extends: ['eslint:recommended', 'plugin:solid/typescript'],
  rules: {
    'no-unused-vars': 0,
    '@typescript-eslint/prefer-as-const': 1,

    eqeqeq: 2,
    'array-callback-return': 2,
    'for-direction': 2,
    'guard-for-in': 2,
    'no-async-promise-executor': 2,
    'no-case-declarations': 2,
    'no-debugger': 2,
    'no-delete-var': 2,
    'no-dupe-else-if': 2,
    'no-duplicate-case': 2,
    'no-eval': 2,
    'no-ex-assign': 2,
    'no-global-assign': 2,
    'no-invalid-regexp': 2,
    'no-native-reassign': 2,
    'no-param-reassign': 2,
    'no-promise-executor-return': 2,
    'no-self-assign': 2,
    'no-self-compare': 2,
    'no-shadow-restricted-names': 2,
    'no-sparse-arrays': 2,
    'no-unsafe-finally': 2,
    'no-unused-labels': 2,
    'no-useless-catch': 2,
    'no-useless-escape': 2,
    'no-var': 2,
    'no-with': 2,
    'require-yield': 2,
    'use-isnan': 2,

    '@typescript-eslint/ban-types': 2,
    '@typescript-eslint/no-confusing-non-null-assertion': 2,
    '@typescript-eslint/no-dupe-class-members': 2,
    '@typescript-eslint/no-empty-interface': 2,
    '@typescript-eslint/no-invalid-this': 2,
    '@typescript-eslint/no-loop-func': 2,
    '@typescript-eslint/no-misused-new': 2,
    '@typescript-eslint/no-namespace': 2,
    '@typescript-eslint/no-non-null-asserted-optional-chain': 2,
    '@typescript-eslint/no-redeclare': 2,
    '@typescript-eslint/no-this-alias': 2,
    '@typescript-eslint/no-unused-expressions': 2,
    '@typescript-eslint/no-unused-vars': 1,
    '@typescript-eslint/no-use-before-define': 2,
    '@typescript-eslint/no-useless-constructor': 2,
    '@typescript-eslint/triple-slash-reference': 2,
    '@typescript-eslint/consistent-type-imports': [
      2,
      {
        fixStyle: 'inline-type-imports',
      },
    ],
  },
  env: {
    browser: true,
    node: true,
    es2023: true,
    jest: true,
  },
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
  },
};
